buildscript {
	repositories {
		mavenCentral()
	}
}

plugins {
	id 'java'
	id 'io.spring.dependency-management' version "${springDependencyManagementPluginVersion}"
}

version = '0.0.1-SNAPSHOT'

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

allprojects {
	group = 'com.psapient'

	repositories {
		mavenCentral()
	}

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(17)
		}
	}

	configurations.all {
		//noinspection GrUnresolvedAccess
		resolutionStrategy {
			// don't cache changing modules at all
			//noinspection GrUnresolvedAccess
			cacheChangingModulesFor 0, 'seconds'
		}
	}
}

subprojects {
	apply plugin: 'idea'
	apply plugin: 'java'
	apply plugin: 'io.spring.dependency-management'

	defaultTasks 'build'

	idea {
		//noinspection GrUnresolvedAccess
		module {
			downloadJavadoc = true
			downloadSources = true
		}
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	gradle.projectsEvaluated {
		tasks.withType(JavaCompile) {
			options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-parameters"
		}
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootAdminVersion}"
			mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
			mavenBom "org.junit:junit-bom:${jUnitVersion}"
		}

		dependencies {
			dependencySet(group: 'org.projectlombok', version: "${lombokVersion}") {
				entry 'lombok'
			}
		}
	}

	test {
		useJUnitPlatform()
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}
